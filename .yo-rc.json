{
  "webpack-scaffold-vuejs": {
    "configuration": {
      "dev": {
        "topScope": [
          "const HtmlWebpackPlugin = require('html-webpack-plugin')",
          "const MiniCssExtractPlugin = require('mini-css-extract-plugin')",
          "const VueLoaderPlugin = require('vue-loader/lib/plugin')",
          "const path = require('path')",
          "const isDev = process.env.NODE_ENV !== 'production'",
          "\n"
        ],
        "webpackOptions": {
          "entry": [
            "\"./src/js/main.js\"",
            "\"./src/style/main.scss\""
          ],
          "output": {
            "path": "path.resolve(__dirname, \"dist\")",
            "filename": "\"main.bundle.js\""
          },
          "mode": "\"development\"",
          "module": {
            "rules": [
              {
                "test": "/.vue$/",
                "exclude": "/node_modules/",
                "loader": "\"vue-loader\""
              },
              {
                "enforce": "\"pre\"",
                "test": "/.js$/",
                "exclude": "/node_modules/",
                "loader": "\"eslint-loader\""
              },
              {
                "test": "/.js$/",
                "exclude": "/node_modules/",
                "loader": "\"babel-loader\""
              },
              {
                "test": "/\\.(png|jpe?g|gif|webp)(\\?.*)?$/",
                "loader": "\"file-loader\""
              },
              {
                "test": "/.(sa|sc|c)ss$/",
                "use": [
                  {
                    "loader": "MiniCssExtractPlugin.loader",
                    "options": {
                      "hmr": "isDev"
                    }
                  },
                  "\"css-loader\"",
                  "\"sass-loader\""
                ]
              }
            ]
          },
          "plugins": [
            "new VueLoaderPlugin()",
            "new HtmlWebpackPlugin({\n\t\t\t\ttemplateParameters: {\n\t\t\t\t\tPROJECT_NAME: \"vue-typescript\"\n\t\t\t\t},\n\t\t\t\ttemplate: './public/index.html',\n\t\t  })",
            "new MiniCssExtractPlugin({\n\t\t\t  filename: isDev ? 'main.css' : 'main.[hash].css',\n\t\t\t  chunkFileName: isDev ? '[id].css' : '[id].[hash].css',\n\t\t\t})"
          ]
        }
      }
    }
  }
}